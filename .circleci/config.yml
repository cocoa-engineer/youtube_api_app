version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2
  aws-ecr: circleci/aws-ecr@6.6.0
  aws-ecs: circleci/aws-ecs@1.0.4
  aws-cli: circleci/aws-cli@0.1.19

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
        environment:
          RAILS_ENV: "${RAILS_ENV}"
          PGHOST: "${PGHOST}"
          POSTGRES_DB: myapp_production
          POSTGRES_USER: "${POSTGRES_USER}"
          POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      - image: circleci/postgres:11.7
        environment:
          PGHOST: "${PGHOST}"
          POSTGRES_DB: myapp_production
          POSTGRES_USER: "${POSTGRES_USER}"
          POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

    working_directory: ~/myapp

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv ./config/database.yml.ci ./config/database.yml

      # - run:
      #     name: Databasesetup
      #     command: |
      #       bundle exec rake db:create
      #       bundle exec rake db:schema:load

      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION

      - run:
          name: "db create"
          command: |
            aws ecs run-task --region $AWS_REGION
              --cluster 'youtube'
              --task-definition 'youtube'
              --overrides { "containerOverrides": [ { "name": "youtube_api_app_web", "command": ["rails", "db:create"] } ] }
      - run:
          name: "db migrate"
          command: |
            aws ecs run-task --region $AWS_REGION
              --cluster 'youtube'
              --task-definition 'youtube'
              --overrides { "containerOverrides": [ { "name": "youtube_api_app_web", "command": ["rails", "db:migrate"] } ] }
      - run:
          name: "webpack-dev-server"
          command: |
            aws ecs run-task --region $AWS_REGION
              --cluster 'youtube'
              --task-definition 'youtube'
              --overrides { "containerOverrides": [ { "name": "youtube_api_app_web", "command": ["./bin/webpack-dev-server", "--host 0.0.0.0", "--port 3035"] } ] }

workflows:
  build-and-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          repo: "youtube_api_app_web"
          tag: "${CIRCLE_SHA1}"
          extra-build-args: "--build-arg RAILS_MASTER_KEY=${RAILS_MASTER_KEY} --build-arg RAILS_ENV=${RAILS_ENV}"
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: "youtube"
          cluster-name: "youtube"
          service-name: "youtube"
          container-image-name-updates: "container=youtube_api_app_web,tag=${CIRCLE_SHA1}"
